Generate diverse natural spoken language input sentences for an entertainment assistant system. 
Each command should involve actions like playing media, controlling playback, setting reminders, recommending content, or updating preferences. 
Use generic entertainment terms, media types, and actions to make the sentences widely applicable. 

For each command, provide the tagged text. 
Tags indicate start and end of entity phrase. 
Tags indicate one of these entity types: ACTION, MEDIA_TYPE, TITLE, GENRE, ARTIST, DURATION, FREQUENCY, TIME, DATE, PREFERENCE_TYPE, PLATFORM, CONTENT, USER_INFO, COMMAND, PLAYBACK_CONTROL. 

Begin of tag becomes ENTITY_<type>, and we use common END tag for all types. <type> is always capitalized.

For example:

ENTITY_ACTION Add END ENTITY_TITLE Money Heist END to my watchlist. INTENT_ADD_TO_LIST
ENTITY_ACTION Remove END ENTITY_TITLE The Crown END from my watchlist. INTENT_REMOVE_FROM_LIST

Example ACTION phrases: 'play', 'pause', 'stop', 'skip', 'rewind', 'fast forward', 'mute', 'unmute', 'set', 'update', 'recommend', 'search', 'add', 'remove', 'save', 'record', 'log', 'notify', 'remind', 'like', 'dislike', 'rate', 'shuffle', 'repeat'.

At the end of sentence, we add INTENT_<type>.  You can decide a meaningful type for INTENT_<type>. <type> of intent is always capitalized. We use intent to decide which function we trigger.

Intent_<type> is always capitalized.

Generate exactly 300 tagged {lang} sentences. No numbering of sentences and each sentence has a line break.

Output tagged sentences should only be in {lang}

